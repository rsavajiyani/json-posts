{"version":3,"sources":["PostCard.tsx","PostList.tsx","PostComment.tsx","PostDetails.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PostCard","post","id","title","body","className","to","pathname","state","PostList","useState","posts","setPosts","isLoading","setIsLoading","useEffect","getPosts","a","fetch","then","response","json","catch","e","Swal","fire","text","message","icon","cols","s","active","color","flashing","size","map","PostComment","comment","name","email","PostDetails","props","postComments","setPostComments","location","getComments","postId","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f806798.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport { PostCardProps } from './compiler/types';\n\nexport const PostCard = ({ post }: PostCardProps) => {\n\tconst { id, title, body } = post;\n\treturn (\n\t\t<div className=\"col s12 m6\">\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"card-content \">\n\t\t\t\t\t<Link to={{ pathname: `post/${id}`, state: { post } }}>\n\t\t\t\t\t\t<span className=\"card-title\">{title}</span>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<p>{body}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { useEffect, useState } from 'react';\nimport { Breadcrumb, Col, Preloader } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { Post } from './compiler/types';\nimport { PostCard } from './PostCard';\n\nexport const PostList = () => {\n\tconst [posts, setPosts] = useState<Post[]>([]);\n\tconst [isLoading, setIsLoading] = useState(true);\n\tuseEffect(() => {\n\t\tgetPosts();\n\t}, []);\n\n\tconst getPosts = async () => {\n\t\tfetch('https://jsonplaceholder.typicode.com/posts')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((json) => {\n\t\t\t\tsetPosts(json);\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tSwal.fire({\n\t\t\t\t\ttitle: 'Error fetching posts',\n\t\t\t\t\ttext: e.message,\n\t\t\t\t\ticon: 'error',\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Breadcrumb className=\"blue-grey darken-1\" cols={12}>\n\t\t\t\t<Link to=\"/\">Posts</Link>\n\t\t\t</Breadcrumb>\n\t\t\t<h1 className=\"title center\">Posts</h1>\n\t\t\t{isLoading ? (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<Col s={4}>\n\t\t\t\t\t\t<Preloader active color=\"blue\" flashing={false} size=\"small\" />\n\t\t\t\t\t</Col>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t{posts.map((post) => (\n\t\t\t\t\t\t<PostCard post={post} key={post.id} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","export const PostComment = ({ comment }) => {\n\tconst { name, email, body } = comment;\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col s12 \">\n\t\t\t\t<div>\n\t\t\t\t\t<span className=\"material-icons\">account_circle</span> {name}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span className=\"material-icons\">email</span> {email}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span className=\"material-icons\">comment</span> {body}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { PostCard } from './PostCard';\nimport { PostComment } from './PostComment';\nimport { Comments, PostDetailsProps } from './compiler/types';\nimport { Breadcrumb, Col, Preloader } from 'react-materialize';\n\nexport const PostDetails = (props: PostDetailsProps) => {\n\tconst [postComments, setPostComments] = useState<Comments[]>([]);\n\tconst [isLoading, setIsLoading] = useState<boolean>(true);\n\t//@ts-ignore\n\tconst { post } = props.location.state;\n\n\tuseEffect(() => {\n\t\tgetComments(post.id);\n\t\tsetIsLoading(false);\n\t}, [post]);\n\n\tconst getComments = async (postId?: number) => {\n\t\tfetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((json) => {\n\t\t\t\tsetPostComments(json);\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tSwal.fire({\n\t\t\t\t\ttitle: 'Error fetching post details',\n\t\t\t\t\ttext: e.message,\n\t\t\t\t\ticon: 'error',\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"post-details\">\n\t\t\t\t<Breadcrumb className=\"blue-grey darken-1\" cols={12}>\n\t\t\t\t\t<Link to=\"/\">Posts</Link>\n\t\t\t\t\t<a>Post {post.id} Details</a>\n\t\t\t\t</Breadcrumb>\n\t\t\t\t{isLoading ? (\n\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t<Col s={4}>\n\t\t\t\t\t\t\t<Preloader active color=\"blue\" flashing={false} size=\"small\" />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<PostCard post={post} />\n\t\t\t\t\t\t<h4\n\t\t\t\t\t\t\tclassName=\"light-blue-text darken-1\n\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tComments\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t{postComments.map((comment) => (\n\t\t\t\t\t\t\t<PostComment comment={comment} key={comment.id} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { PostList } from './PostList';\nimport { PostDetails } from './PostDetails';\n\nexport default function App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/post/:id\" exact component={PostDetails}></Route>\n\t\t\t\t\t\t<Route path=\"/\" component={PostList}></Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}